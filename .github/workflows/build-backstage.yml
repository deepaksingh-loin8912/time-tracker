name: Generate, Build, and Dockerize Backstage

on:
  workflow_dispatch:  # Manual trigger

jobs:
  build-backstage:
    runs-on: self-hosted  # EC2 runner

    env:
      APP_NAME: mybackstage  # Change this if you want a different app name

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Enable Corepack and install correct Yarn version
        run: |
          corepack enable
          corepack prepare yarn@4.4.1 --activate


      - name: Install expect (for automating prompts)
        run: sudo apt-get update && sudo apt-get install -y expect

      - name: Clean existing app folder (optional but recommended)
        run: rm -rf $APP_NAME

      - name: Generate Backstage App Non-Interactively
        run: |
          expect -c "
            set appname \$env(APP_NAME)
            spawn npx @backstage/create-app
            expect \"Enter a name for the app\"
            send \"\$appname\r\"
            expect eof
          "
        env:
          APP_NAME: mybackstage

      - name: Remove Yarn config (optional)
        run: rm -f .yarnrc.yml
        working-directory: ${{ env.APP_NAME }}
        
      - name: Switch Yarn to node_modules linker (disable PnP strictness)
        run: |
          echo "nodeLinker: node-modules" > .yarnrc.yml
        working-directory: ${{ env.APP_NAME }}

      - name: Install Dependencies
        run: yarn install 
        working-directory: ${{ env.APP_NAME }}

      - name: Build Backend
        run: yarn workspace backend build
        working-directory: ${{ env.APP_NAME }}

      - name: Build Docker Image
        run: docker build -f packages/backend/Dockerfile -t backstage .
        working-directory: ${{ env.APP_NAME }}
